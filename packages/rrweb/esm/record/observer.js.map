{"version":3,"file":"observer.js","sourceRoot":"","sources":["../../src/record/observer.ts"],"names":[],"mappings":"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","sourcesContent":["import { INode, serializeNodeWithId } from '@partial/rrweb-snapshot';\nimport {\n  mirror,\n  throttle,\n  on,\n  hookSetter,\n  getWindowHeight,\n  getWindowWidth,\n  isBlocked,\n  isAncestorRemoved,\n} from '../utils';\nimport {\n  mutationCallBack,\n  removedNodeMutation,\n  addedNodeMutation,\n  observerParam,\n  mousemoveCallBack,\n  mousePosition,\n  mouseInteractionCallBack,\n  MouseInteractions,\n  listenerHandler,\n  scrollCallback,\n  viewportResizeCallback,\n  inputValue,\n  inputCallback,\n  hookResetter,\n  textCursor,\n  attributeCursor,\n  blockClass,\n} from '../types';\nimport { deepDelete, isParentRemoved, isParentDropped } from './collection';\n\n/**\n * Mutation observer will merge several mutations into an array and pass\n * it to the callback function, this may make tracing added nodes hard.\n * For example, if we append an element el_1 into body, and then append\n * another element el_2 into el_1, these two mutations may be passed to the\n * callback function together when the two operations were done.\n * Generally we need trace child nodes of newly added node, but in this\n * case if we count el_2 as el_1's child node in the first mutation record,\n * then we will count el_2 again in the secoond mutation record which was\n * duplicated.\n * To avoid of duplicate counting added nodes, we will use a Set to store\n * added nodes and its child nodes during iterate mutation records. Then\n * collect added nodes from the Set which will has no duplicate copy. But\n * this also cause newly added node will not be serialized with id ASAP,\n * which means all the id related calculation should be lazy too.\n * @param cb mutationCallBack\n */\nfunction initMutationObserver(\n  cb: mutationCallBack,\n  blockClass: blockClass,\n  inlineStylesheet: boolean,\n): MutationObserver {\n  const observer = new MutationObserver(mutations => {\n    const texts: textCursor[] = [];\n    const attributes: attributeCursor[] = [];\n    const removes: removedNodeMutation[] = [];\n    const adds: addedNodeMutation[] = [];\n\n    const addsSet = new Set<Node>();\n    const droppedSet = new Set<Node>();\n\n    const genAdds = (n: Node) => {\n      if (isBlocked(n, blockClass)) {\n        return;\n      }\n      addsSet.add(n);\n      droppedSet.delete(n);\n      n.childNodes.forEach(childN => genAdds(childN));\n    };\n    mutations.forEach(mutation => {\n      const {\n        type,\n        target,\n        oldValue,\n        addedNodes,\n        removedNodes,\n        attributeName,\n      } = mutation;\n      switch (type) {\n        case 'characterData': {\n          const value = target.textContent;\n          if (!isBlocked(target, blockClass) && value !== oldValue) {\n            texts.push({\n              value,\n              node: target,\n            });\n          }\n          break;\n        }\n        case 'attributes': {\n          const value = (target as HTMLElement).getAttribute(attributeName!);\n          if (isBlocked(target, blockClass) || value === oldValue) {\n            return;\n          }\n          let item: attributeCursor | undefined = attributes.find(\n            a => a.node === target,\n          );\n          if (!item) {\n            item = {\n              node: target,\n              attributes: {},\n            };\n            attributes.push(item);\n          }\n          // overwrite attribute if the mutations was triggered in same time\n          item.attributes[attributeName!] = value;\n          break;\n        }\n        case 'childList': {\n          addedNodes.forEach(n => genAdds(n));\n          removedNodes.forEach(n => {\n            const nodeId = mirror.getId(n as INode);\n            const parentId = mirror.getId(target as INode);\n            if (isBlocked(n, blockClass)) {\n              return;\n            }\n            // removed node has not been serialized yet, just remove it from the Set\n            if (addsSet.has(n)) {\n              deepDelete(addsSet, n);\n              droppedSet.add(n);\n            } else if (addsSet.has(target) && nodeId === -1) {\n              /**\n               * If target was newly added and removed child node was\n               * not serialized, it means the child node has been removed\n               * before callback fired, so we can ignore it.\n               * TODO: verify this\n               */\n            } else if (isAncestorRemoved(target as INode)) {\n              /**\n               * If parent id was not in the mirror map any more, it\n               * means the parent node has already been removed. So\n               * the node is also removed which we do not need to track\n               * and replay.\n               */\n            } else {\n              removes.push({\n                parentId,\n                id: nodeId,\n              });\n            }\n            mirror.removeNodeFromMap(n as INode);\n          });\n          break;\n        }\n        default:\n          break;\n      }\n    });\n\n    Array.from(addsSet).forEach(n => {\n      if (!isParentDropped(droppedSet, n) && !isParentRemoved(removes, n)) {\n        adds.push({\n          parentId: mirror.getId((n.parentNode as Node) as INode),\n          previousId: !n.previousSibling\n            ? n.previousSibling\n            : mirror.getId(n.previousSibling as INode),\n          nextId: !n.nextSibling\n            ? n.nextSibling\n            : mirror.getId((n.nextSibling as unknown) as INode),\n          node: serializeNodeWithId(n, document, mirror.map, blockClass, true)!,\n        });\n      } else {\n        droppedSet.add(n);\n      }\n    });\n\n    const payload = {\n      texts: texts\n        .map(text => ({\n          id: mirror.getId(text.node as INode),\n          value: text.value,\n        }))\n        // text mutation's id was not in the mirror map means the target node has been removed\n        .filter(text => mirror.has(text.id)),\n      attributes: attributes\n        .map(attribute => ({\n          id: mirror.getId(attribute.node as INode),\n          attributes: attribute.attributes,\n        }))\n        // attribute mutation's id was not in the mirror map means the target node has been removed\n        .filter(attribute => mirror.has(attribute.id)),\n      removes,\n      adds,\n    };\n    // payload may be empty if the mutations happened in some blocked elements\n    if (\n      !payload.texts.length &&\n      !payload.attributes.length &&\n      !payload.removes.length &&\n      !payload.adds.length\n    ) {\n      return;\n    }\n    cb(payload);\n  });\n  observer.observe(document, {\n    attributes: true,\n    attributeOldValue: true,\n    characterData: true,\n    characterDataOldValue: true,\n    childList: true,\n    subtree: true,\n  });\n  return observer;\n}\n\nfunction initMousemoveObserver(cb: mousemoveCallBack): listenerHandler {\n  let positions: mousePosition[] = [];\n  let timeBaseline: number | null;\n  const wrappedCb = throttle(() => {\n    const totalOffset = Date.now() - timeBaseline!;\n    cb(\n      positions.map(p => {\n        p.timeOffset -= totalOffset;\n        return p;\n      }),\n    );\n    positions = [];\n    timeBaseline = null;\n  }, 500);\n  const updatePosition = throttle<MouseEvent>(\n    evt => {\n      const { clientX, clientY, target } = evt;\n      if (!timeBaseline) {\n        timeBaseline = Date.now();\n      }\n      positions.push({\n        x: clientX,\n        y: clientY,\n        id: mirror.getId(target as INode),\n        timeOffset: Date.now() - timeBaseline,\n      });\n      wrappedCb();\n    },\n    50,\n    {\n      trailing: false,\n    },\n  );\n  return on('mousemove', updatePosition);\n}\n\nfunction initMouseInteractionObserver(\n  cb: mouseInteractionCallBack,\n  blockClass: blockClass,\n): listenerHandler {\n  const handlers: listenerHandler[] = [];\n  const getHandler = (eventKey: keyof typeof MouseInteractions) => {\n    return (event: MouseEvent) => {\n      if (isBlocked(event.target as Node, blockClass)) {\n        return;\n      }\n      const id = mirror.getId(event.target as INode);\n      const { clientX, clientY } = event;\n      cb({\n        type: MouseInteractions[eventKey],\n        id,\n        x: clientX,\n        y: clientY,\n      });\n    };\n  };\n  Object.keys(MouseInteractions)\n    .filter(key => Number.isNaN(Number(key)))\n    .forEach((eventKey: keyof typeof MouseInteractions) => {\n      const eventName = eventKey.toLowerCase();\n      const handler = getHandler(eventKey);\n      handlers.push(on(eventName, handler));\n    });\n  return () => {\n    handlers.forEach(h => h());\n  };\n}\n\nfunction initScrollObserver(\n  cb: scrollCallback,\n  blockClass: blockClass,\n): listenerHandler {\n  const updatePosition = throttle<UIEvent>(evt => {\n    if (!evt.target || isBlocked(evt.target as Node, blockClass)) {\n      return;\n    }\n    const id = mirror.getId(evt.target as INode);\n    if (evt.target === document) {\n      const scrollEl = (document.scrollingElement || document.documentElement)!;\n      cb({\n        id,\n        x: scrollEl.scrollLeft,\n        y: scrollEl.scrollTop,\n      });\n    } else {\n      cb({\n        id,\n        x: (evt.target as HTMLElement).scrollLeft,\n        y: (evt.target as HTMLElement).scrollTop,\n      });\n    }\n  }, 100);\n  return on('scroll', updatePosition);\n}\n\nfunction initViewportResizeObserver(\n  cb: viewportResizeCallback,\n): listenerHandler {\n  const updateDimension = throttle(() => {\n    const height = getWindowHeight();\n    const width = getWindowWidth();\n    cb({\n      width: Number(width),\n      height: Number(height),\n    });\n  }, 200);\n  return on('resize', updateDimension, window);\n}\n\nconst INPUT_TAGS = ['INPUT', 'TEXTAREA', 'SELECT'];\nconst lastInputValueMap: WeakMap<EventTarget, inputValue> = new WeakMap();\nfunction initInputObserver(\n  cb: inputCallback,\n  blockClass: blockClass,\n  ignoreClass: string,\n): listenerHandler {\n  function eventHandler(event: Event) {\n    const { target } = event;\n    if (\n      !target ||\n      !(target as Element).tagName ||\n      INPUT_TAGS.indexOf((target as Element).tagName) < 0 ||\n      isBlocked(target as Node, blockClass)\n    ) {\n      return;\n    }\n    const type: string | undefined = (target as HTMLInputElement).type;\n    if (\n      type === 'password' ||\n      (target as HTMLElement).classList.contains(ignoreClass)\n    ) {\n      return;\n    }\n    const text = (target as HTMLInputElement).value;\n    let isChecked = false;\n    if (type === 'radio' || type === 'checkbox') {\n      isChecked = (target as HTMLInputElement).checked;\n    }\n    cbWithDedup(target, { text, isChecked });\n    // if a radio was checked\n    // the other radios with the same name attribute will be unchecked.\n    const name: string | undefined = (target as HTMLInputElement).name;\n    if (type === 'radio' && name && isChecked) {\n      document\n        .querySelectorAll(`input[type=\"radio\"][name=\"${name}\"]`)\n        .forEach(el => {\n          if (el !== target) {\n            cbWithDedup(el, {\n              text: (el as HTMLInputElement).value,\n              isChecked: !isChecked,\n            });\n          }\n        });\n    }\n  }\n  function cbWithDedup(target: EventTarget, v: inputValue) {\n    const lastInputValue = lastInputValueMap.get(target);\n    if (\n      !lastInputValue ||\n      lastInputValue.text !== v.text ||\n      lastInputValue.isChecked !== v.isChecked\n    ) {\n      lastInputValueMap.set(target, v);\n      const id = mirror.getId(target as INode);\n      cb({\n        ...v,\n        id,\n      });\n    }\n  }\n  const handlers: Array<listenerHandler | hookResetter> = [\n    'input',\n    'change',\n  ].map(eventName => on(eventName, eventHandler));\n  const propertyDescriptor = Object.getOwnPropertyDescriptor(\n    HTMLInputElement.prototype,\n    'value',\n  );\n  const hookProperties: Array<[HTMLElement, string]> = [\n    [HTMLInputElement.prototype, 'value'],\n    [HTMLInputElement.prototype, 'checked'],\n    [HTMLSelectElement.prototype, 'value'],\n    [HTMLTextAreaElement.prototype, 'value'],\n  ];\n  if (propertyDescriptor && propertyDescriptor.set) {\n    handlers.push(\n      ...hookProperties.map(p =>\n        hookSetter<HTMLElement>(p[0], p[1], {\n          set() {\n            // mock to a normal event\n            eventHandler({ target: this } as Event);\n          },\n        }),\n      ),\n    );\n  }\n  return () => {\n    handlers.forEach(h => h());\n  };\n}\n\nexport default function initObservers(o: observerParam): listenerHandler {\n  const mutationObserver = initMutationObserver(\n    o.mutationCb,\n    o.blockClass,\n    o.inlineStylesheet,\n  );\n  const mousemoveHandler = initMousemoveObserver(o.mousemoveCb);\n  const mouseInteractionHandler = initMouseInteractionObserver(\n    o.mouseInteractionCb,\n    o.blockClass,\n  );\n  const scrollHandler = initScrollObserver(o.scrollCb, o.blockClass);\n  const viewportResizeHandler = initViewportResizeObserver(o.viewportResizeCb);\n  const inputHandler = initInputObserver(\n    o.inputCb,\n    o.blockClass,\n    o.ignoreClass,\n  );\n  return () => {\n    mutationObserver.disconnect();\n    mousemoveHandler();\n    mouseInteractionHandler();\n    scrollHandler();\n    viewportResizeHandler();\n    inputHandler();\n  };\n}\n"]}