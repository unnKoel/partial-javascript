{"version":3,"file":"index.js","sourceRoot":"","sources":["../../src/replay/index.ts"],"names":[],"mappings":"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","sourcesContent":["import { rebuild, buildNodeWithSN } from \"@partial/rrweb-snapshot\";\nimport * as mittProxy from \"mitt\";\nimport * as smoothscroll from \"smoothscroll-polyfill\";\nimport Timer from \"./timer\";\nimport {\n  EventType,\n  IncrementalSource,\n  fullSnapshotEvent,\n  eventWithTime,\n  MouseInteractions,\n  playerConfig,\n  playerMetaData,\n  viewportResizeDimention,\n  missingNodeMap,\n  addedNodeMutation,\n  missingNode,\n  actionWithDelay,\n  incrementalSnapshotEvent,\n  incrementalData,\n  ReplayerEvents\n} from \"../types\";\nimport { mirror } from \"../utils\";\nimport getInjectStyleRules from \"./styles/inject-style\";\nimport \"./styles/style.css\";\n\nconst SKIP_TIME_THRESHOLD = 10 * 1000;\nconst SKIP_TIME_INTERVAL = 5 * 1000;\n\n// https://github.com/rollup/rollup/issues/1267#issuecomment-296395734\n// tslint:disable-next-line\nconst mitt = (mittProxy as any).default || mittProxy;\n\nconst REPLAY_CONSOLE_PREFIX = \"[replayer]\";\n\nexport class Replayer {\n  public wrapper: HTMLDivElement; //wrapper div\n  public iframe: HTMLIFrameElement; //iframe\n  public timer: Timer; //时间执行器\n\n  private events: eventWithTime[] = []; //事件数组\n  private config: playerConfig; //player配置\n\n  private mouse: HTMLDivElement;\n\n  private emitter: mitt.Emitter = mitt();\n\n  private baselineTime: number = 0;\n  // record last played event timestamp when paused\n  private lastPlayedEvent: eventWithTime;\n\n  private nextUserInteractionEvent: eventWithTime | null;\n  private noramlSpeed: number = -1;\n\n  private missingNodeRetryMap: missingNodeMap = {};\n\n  constructor(events: eventWithTime[], config?: Partial<playerConfig>) {\n    if (events.length < 2) {\n      throw new Error(\"Replayer need at least 2 events.\");\n    }\n    this.events = events;\n    this.handleResize = this.handleResize.bind(this);\n\n    const defaultConfig: playerConfig = {\n      speed: 1,\n      root: document.body,\n      loadTimeout: 0,\n      skipInactive: false,\n      showWarning: true,\n      showDebug: false,\n      blockClass: \"rr-block\",\n      liveMode: false\n    };\n    this.config = Object.assign({}, defaultConfig, config);\n\n    this.timer = new Timer(this.config);\n    smoothscroll.polyfill();\n    this.setupDom();\n    this.emitter.on(\"resize\", this.handleResize as mitt.Handler);\n  }\n\n  public on(event: string, handler: mitt.Handler) {\n    this.emitter.on(event, handler);\n  }\n\n  public setConfig(config: Partial<playerConfig>) {\n    Object.keys(config).forEach((key: keyof playerConfig) => {\n      this.config[key] = config[key]!;\n    });\n    if (!this.config.skipInactive) {\n      this.noramlSpeed = -1;\n    }\n  }\n\n  public getMetaData(): playerMetaData {\n    const firstEvent = this.events[0];\n    const lastEvent = this.events[this.events.length - 1];\n    return {\n      totalTime: lastEvent.timestamp - firstEvent.timestamp\n    };\n  }\n\n  public getTimeOffset(): number {\n    return this.baselineTime - this.events[0].timestamp;\n  }\n\n  /**\n   * This API was designed to be used as play at any time offset.\n   * Since we minimized the data collected from recorder, we do not\n   * have the ability of undo an event.\n   * So the implementation of play at any time offset will always iterate\n   * all of the events, cast event before the offset synchronously\n   * and cast event after the offset asynchronously with timer.\n   * @param timeOffset number\n   */\n  public play(timeOffset = 0) {\n    this.timer.clear();\n    this.baselineTime = this.events[0].timestamp + timeOffset;\n    const actions = new Array<actionWithDelay>();\n    for (const event of this.events) {\n      const isSync = event.timestamp < this.baselineTime;\n      const castFn = this.getCastFn(event, isSync);\n      if (isSync) {\n        castFn();\n      } else {\n        actions.push({ doAction: castFn, delay: this.getDelay(event) });\n      }\n    }\n    this.timer.addActions(actions);\n    this.timer.start();\n    this.emitter.emit(ReplayerEvents.Start);\n  }\n\n  public pause() {\n    this.timer.clear();\n    this.emitter.emit(ReplayerEvents.Pause);\n  }\n\n  public resume(timeOffset = 0) {\n    this.timer.clear();\n    this.baselineTime = this.events[0].timestamp + timeOffset;\n    const actions = new Array<actionWithDelay>();\n    for (const event of this.events) {\n      if (\n        event.timestamp <= this.lastPlayedEvent.timestamp ||\n        event === this.lastPlayedEvent\n      ) {\n        continue;\n      }\n      const castFn = this.getCastFn(event);\n      actions.push({\n        doAction: castFn,\n        delay: this.getDelay(event)\n      });\n    }\n    this.timer.addActions(actions);\n    this.timer.start();\n    this.emitter.emit(ReplayerEvents.Resume);\n  }\n\n  public addEvent(event: eventWithTime) {\n    const castFn = this.getCastFn(event, true);\n    castFn();\n  }\n\n  /**\n   * 初始化dom\n   */\n  private setupDom() {\n    this.wrapper = document.createElement(\"div\");\n    this.wrapper.classList.add(\"replayer-wrapper\");\n    this.config.root.appendChild(this.wrapper);\n\n    this.mouse = document.createElement(\"div\");\n    this.mouse.classList.add(\"replayer-mouse\");\n    this.wrapper.appendChild(this.mouse);\n\n    this.iframe = document.createElement(\"iframe\");\n    this.iframe.setAttribute(\"sandbox\", \"allow-same-origin\");\n    this.iframe.setAttribute(\"scrolling\", \"no\");\n    this.wrapper.appendChild(this.iframe);\n  }\n\n  private handleResize(dimension: viewportResizeDimention) {\n    this.iframe.width = `${dimension.width}px`;\n    this.iframe.height = `${dimension.height}px`;\n  }\n\n  // TODO: add speed to mouse move timestamp calculation\n  private getDelay(event: eventWithTime): number {\n    // Mouse move events was recorded in a throttle function,\n    // so we need to find the real timestamp by traverse the time offsets.\n    if (\n      event.type === EventType.IncrementalSnapshot &&\n      event.data.source === IncrementalSource.MouseMove\n    ) {\n      const firstOffset = event.data.positions[0].timeOffset;\n      // timeOffset is a negative offset to event.timestamp\n      const firstTimestamp = event.timestamp + firstOffset;\n      event.delay = firstTimestamp - this.baselineTime;\n      return firstTimestamp - this.baselineTime;\n    }\n    event.delay = event.timestamp - this.baselineTime;\n    return event.timestamp - this.baselineTime;\n  }\n\n  private getCastFn(event: eventWithTime, isSync = false) {\n    let castFn: undefined | (() => void);\n    switch (event.type) {\n      case EventType.DomContentLoaded:\n      case EventType.Load:\n        break;\n      case EventType.Meta:\n        castFn = () =>\n          this.emitter.emit(ReplayerEvents.Resize, {\n            width: event.data.width,\n            height: event.data.height\n          });\n        break;\n      case EventType.FullSnapshot:\n        castFn = () => {\n          this.rebuildFullSnapshot(event);\n          this.iframe.contentWindow!.scrollTo(event.data.initialOffset);\n        };\n        break;\n      case EventType.IncrementalSnapshot:\n        castFn = () => {\n          this.applyIncremental(event, isSync);\n          if (event === this.nextUserInteractionEvent) {\n            this.nextUserInteractionEvent = null;\n            this.restoreSpeed();\n          }\n          if (this.config.skipInactive && !this.nextUserInteractionEvent) {\n            for (const _event of this.events) {\n              if (_event.timestamp! <= event.timestamp!) {\n                continue;\n              }\n              if (this.isUserInteraction(_event)) {\n                if (\n                  _event.delay! - event.delay! >\n                  SKIP_TIME_THRESHOLD * this.config.speed\n                ) {\n                  this.nextUserInteractionEvent = _event;\n                }\n                break;\n              }\n            }\n            if (this.nextUserInteractionEvent) {\n              this.noramlSpeed = this.config.speed;\n              const skipTime =\n                this.nextUserInteractionEvent.delay! - event.delay!;\n              const payload = {\n                speed: Math.min(Math.round(skipTime / SKIP_TIME_INTERVAL), 360)\n              };\n              this.setConfig(payload);\n              this.emitter.emit(ReplayerEvents.SkipStart, payload);\n            }\n          }\n        };\n        break;\n      default:\n    }\n    const wrappedCastFn = () => {\n      if (castFn) {\n        castFn();\n      }\n      this.lastPlayedEvent = event;\n      if (event === this.events[this.events.length - 1]) {\n        this.restoreSpeed();\n        this.emitter.emit(ReplayerEvents.Finish);\n      }\n    };\n    return wrappedCastFn;\n  }\n\n  private rebuildFullSnapshot(\n    event: fullSnapshotEvent & { timestamp: number }\n  ) {\n    if (Object.keys(this.missingNodeRetryMap).length) {\n      console.warn(\n        \"Found unresolved missing node map\",\n        this.missingNodeRetryMap\n      );\n    }\n    this.missingNodeRetryMap = {};\n    mirror.map = rebuild(event.data.node, this.iframe.contentDocument!)[1];\n    const styleEl = document.createElement(\"style\");\n    const { documentElement, head } = this.iframe.contentDocument!;\n    documentElement!.insertBefore(styleEl, head);\n    const injectStyleRules = getInjectStyleRules(this.config.blockClass);\n    for (let idx = 0; idx < injectStyleRules.length; idx++) {\n      (styleEl.sheet! as CSSStyleSheet).insertRule(injectStyleRules[idx], idx);\n    }\n    this.emitter.emit(ReplayerEvents.FullsnapshotRebuilded);\n    this.waitForStylesheetLoad();\n  }\n\n  /**\n   * pause when loading style sheet, resume when loaded all timeout exceed\n   */\n  private waitForStylesheetLoad() {\n    const { head } = this.iframe.contentDocument!;\n    if (head) {\n      const unloadSheets: Set<HTMLLinkElement> = new Set();\n      let timer: number;\n      head\n        .querySelectorAll('link[rel=\"stylesheet\"]')\n        .forEach((css: HTMLLinkElement) => {\n          if (!css.sheet) {\n            if (unloadSheets.size === 0) {\n              this.pause();\n              this.emitter.emit(ReplayerEvents.LoadStylesheetStart);\n              timer = window.setTimeout(() => {\n                this.resume(this.timer.timeOffset);\n                // mark timer was called\n                timer = -1;\n              }, this.config.loadTimeout);\n            }\n            unloadSheets.add(css);\n            css.addEventListener(\"load\", () => {\n              unloadSheets.delete(css);\n              if (unloadSheets.size === 0 && timer !== -1) {\n                this.resume(this.timer.timeOffset);\n                this.emitter.emit(ReplayerEvents.LoadStylesheetEnd);\n                if (timer) {\n                  window.clearTimeout(timer);\n                }\n              }\n            });\n          }\n        });\n    }\n  }\n\n  /**\n   * 应用界面增量\n   * @param e\n   * @param isSync\n   */\n  private applyIncremental(\n    e: incrementalSnapshotEvent & { timestamp: number },\n    isSync: boolean\n  ) {\n    const { data: d } = e;\n    switch (d.source) {\n      case IncrementalSource.Mutation: {\n        // 处理节点删除\n        d.removes.forEach(mutation => {\n          const target = mirror.getNode(mutation.id);\n          if (!target) {\n            return this.warnNodeNotFound(d, mutation.id);\n          }\n          const parent = mirror.getNode(mutation.parentId);\n          if (!parent) {\n            return this.warnNodeNotFound(d, mutation.parentId);\n          }\n          // target may be removed with its parents before\n          mirror.removeNodeFromMap(target);\n          if (parent) {\n            parent.removeChild(target);\n          }\n        });\n\n        // 新增节点处理\n        const missingNodeMap: missingNodeMap = { ...this.missingNodeRetryMap };\n        d.adds.forEach(mutation => {\n          const target = buildNodeWithSN(\n            mutation.node,\n            this.iframe.contentDocument!,\n            mirror.map,\n            true\n          ) as Node;\n          const parent = mirror.getNode(mutation.parentId);\n          if (!parent) {\n            return this.warnNodeNotFound(d, mutation.parentId);\n          }\n          let previous: Node | null = null;\n          let next: Node | null = null;\n          if (mutation.previousId) {\n            previous = mirror.getNode(mutation.previousId) as Node;\n          }\n          if (mutation.nextId) {\n            next = mirror.getNode(mutation.nextId) as Node;\n          }\n\n          if (mutation.previousId === -1 || mutation.nextId === -1) {\n            missingNodeMap[mutation.node.id] = {\n              node: target,\n              mutation\n            };\n            return;\n          }\n\n          if (\n            previous &&\n            previous.nextSibling &&\n            previous.nextSibling.parentNode\n          ) {\n            parent.insertBefore(target, previous.nextSibling);\n          } else if (next && next.parentNode) {\n            parent.insertBefore(target, next);\n          } else {\n            parent.appendChild(target);\n          }\n\n          if (mutation.previousId || mutation.nextId) {\n            this.resolveMissingNode(missingNodeMap, parent, target, mutation);\n          }\n        });\n        if (Object.keys(missingNodeMap).length) {\n          Object.assign(this.missingNodeRetryMap, missingNodeMap);\n        }\n\n        // 新增文本处理\n        d.texts.forEach(mutation => {\n          const target = mirror.getNode(mutation.id);\n          if (!target) {\n            return this.warnNodeNotFound(d, mutation.id);\n          }\n          target.textContent = mutation.value;\n        });\n\n        // 新增属性处理\n        d.attributes.forEach(mutation => {\n          const target = mirror.getNode(mutation.id);\n          if (!target) {\n            return this.warnNodeNotFound(d, mutation.id);\n          }\n          for (const attributeName in mutation.attributes) {\n            if (typeof attributeName === \"string\") {\n              const value = mutation.attributes[attributeName];\n              if (value !== null) {\n                ((target as Node) as Element).setAttribute(\n                  attributeName,\n                  value\n                );\n              } else {\n                ((target as Node) as Element).removeAttribute(attributeName);\n              }\n            }\n          }\n        });\n        break;\n      }\n      case IncrementalSource.MouseMove:\n        // 鼠标移动，通过div图片伪造了一个鼠标出来\n        if (isSync) {\n          const lastPosition = d.positions[d.positions.length - 1];\n          this.moveAndHover(d, lastPosition.x, lastPosition.y, lastPosition.id);\n        } else {\n          d.positions.forEach(p => {\n            const action = {\n              doAction: () => {\n                this.moveAndHover(d, p.x, p.y, p.id);\n              },\n              delay: p.timeOffset + e.timestamp - this.baselineTime\n            };\n            this.timer.addAction(action);\n          });\n        }\n        break;\n      case IncrementalSource.MouseInteraction: {\n        /**\n         * 鼠标交互事件触发，在点击时，模拟了下点击效果；\n         * Same as the situation of missing input target.\n         */\n        if (d.id === -1) {\n          break;\n        }\n        const event = new Event(MouseInteractions[d.type].toLowerCase());\n        const target = mirror.getNode(d.id);\n        if (!target) {\n          return this.debugNodeNotFound(d, d.id);\n        }\n        this.emitter.emit(ReplayerEvents.MouseInteraction, {\n          type: d.type,\n          target\n        });\n        switch (d.type) {\n          case MouseInteractions.Blur:\n            if (((target as Node) as HTMLElement).blur) {\n              ((target as Node) as HTMLElement).blur();\n            }\n            break;\n          case MouseInteractions.Focus:\n            if (((target as Node) as HTMLElement).focus) {\n              ((target as Node) as HTMLElement).focus({\n                preventScroll: true\n              });\n            }\n            break;\n          case MouseInteractions.Click:\n            /**\n             * Click has no visual impact when replaying and may\n             * trigger navigation when apply to an <a> link.\n             * So we will not call click(), instead we add an\n             * animation to the mouse element which indicate user\n             * clicked at this moment.\n             */\n            if (!isSync) {\n              this.moveAndHover(d, d.x, d.y, d.id);\n              this.mouse.classList.remove(\"active\");\n              // tslint:disable-next-line\n              void this.mouse.offsetWidth;\n              this.mouse.classList.add(\"active\");\n            }\n            break;\n          default:\n            target.dispatchEvent(event);\n        }\n        break;\n      }\n      case IncrementalSource.Scroll: {\n        /**\n         * 滚动处理\n         * Same as the situation of missing input target.\n         */\n        if (d.id === -1) {\n          break;\n        }\n        const target = mirror.getNode(d.id);\n        if (!target) {\n          return this.debugNodeNotFound(d, d.id);\n        }\n        if ((target as Node) === this.iframe.contentDocument) {\n          this.iframe.contentWindow!.scrollTo({\n            top: d.y,\n            left: d.x,\n            behavior: isSync ? \"auto\" : \"smooth\"\n          });\n        } else {\n          try {\n            ((target as Node) as Element).scrollTop = d.y;\n            ((target as Node) as Element).scrollLeft = d.x;\n          } catch (error) {\n            /**\n             * Seldomly we may found scroll target was removed before\n             * its last scroll event.\n             */\n          }\n        }\n        break;\n      }\n      case IncrementalSource.ViewportResize:\n        this.emitter.emit(ReplayerEvents.Resize, {\n          width: d.width,\n          height: d.height\n        });\n        break;\n      case IncrementalSource.Input: {\n        /**\n         * Input event on an unserialized node usually means the event\n         * was synchrony triggered programmatically after the node was\n         * created. This means there was not an user observable interaction\n         * and we do not need to replay it.\n         */\n        if (d.id === -1) {\n          break;\n        }\n        const target = mirror.getNode(d.id);\n        if (!target) {\n          return this.debugNodeNotFound(d, d.id);\n        }\n        try {\n          ((target as Node) as HTMLInputElement).checked = d.isChecked;\n          ((target as Node) as HTMLInputElement).value = d.text;\n        } catch (error) {\n          // for safe\n        }\n        break;\n      }\n      default:\n    }\n  }\n\n  private resolveMissingNode(\n    map: missingNodeMap,\n    parent: Node,\n    target: Node,\n    targetMutation: addedNodeMutation\n  ) {\n    const { previousId, nextId } = targetMutation;\n    const previousInMap = previousId && map[previousId];\n    const nextInMap = nextId && map[nextId];\n    if (previousInMap) {\n      const { node, mutation } = previousInMap as missingNode;\n      parent.insertBefore(node, target);\n      delete map[mutation.node.id];\n      delete this.missingNodeRetryMap[mutation.node.id];\n      if (mutation.previousId || mutation.nextId) {\n        this.resolveMissingNode(map, parent, node as Node, mutation);\n      }\n    }\n    if (nextInMap) {\n      const { node, mutation } = nextInMap as missingNode;\n      parent.insertBefore(node, target.nextSibling);\n      delete map[mutation.node.id];\n      delete this.missingNodeRetryMap[mutation.node.id];\n      if (mutation.previousId || mutation.nextId) {\n        this.resolveMissingNode(map, parent, node as Node, mutation);\n      }\n    }\n  }\n\n  private moveAndHover(d: incrementalData, x: number, y: number, id: number) {\n    this.mouse.style.left = `${x}px`;\n    this.mouse.style.top = `${y}px`;\n    const target = mirror.getNode(id);\n    if (!target) {\n      return this.debugNodeNotFound(d, id);\n    }\n    this.hoverElements((target as Node) as Element);\n  }\n\n  private hoverElements(el: Element) {\n    this.iframe\n      .contentDocument!.querySelectorAll(\".\\\\:hover\")\n      .forEach(hoveredEl => {\n        hoveredEl.classList.remove(\":hover\");\n      });\n    let currentEl: Element | null = el;\n    while (currentEl) {\n      currentEl.classList.add(\":hover\");\n      currentEl = currentEl.parentElement;\n    }\n  }\n\n  private isUserInteraction(event: eventWithTime): boolean {\n    if (event.type !== EventType.IncrementalSnapshot) {\n      return false;\n    }\n    return (\n      event.data.source > IncrementalSource.Mutation &&\n      event.data.source <= IncrementalSource.Input\n    );\n  }\n\n  private restoreSpeed() {\n    if (this.noramlSpeed === -1) {\n      return;\n    }\n    const payload = { speed: this.noramlSpeed };\n    this.setConfig(payload);\n    this.emitter.emit(ReplayerEvents.SkipEnd, payload);\n    this.noramlSpeed = -1;\n  }\n\n  private warnNodeNotFound(d: incrementalData, id: number) {\n    if (!this.config.showWarning) {\n      return;\n    }\n    console.warn(REPLAY_CONSOLE_PREFIX, `Node with id '${id}' not found in`, d);\n  }\n\n  private debugNodeNotFound(d: incrementalData, id: number) {\n    /**\n     * There maybe some valid scenes of node not being found.\n     * Because DOM events are macrotask and MutationObserver callback\n     * is microtask, so events fired on a removed DOM may emit\n     * snapshots in the reverse order.\n     */\n    if (!this.config.showDebug) {\n      return;\n    }\n    // tslint:disable-next-line: no-console\n    console.log(REPLAY_CONSOLE_PREFIX, `Node with id '${id}' not found in`, d);\n  }\n}\n"]}