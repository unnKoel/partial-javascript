{"version":3,"file":"timer.js","sourceRoot":"","sources":["../../src/replay/timer.ts"],"names":[],"mappings":";AAEA;IAOE,eAAY,MAAoB,EAAE,OAA+B;QAA/B,wBAAA,EAAA,YAA+B;QAN1D,eAAU,GAAW,CAAC,CAAC;QAO5B,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACvB,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;IACvB,CAAC;IACD;;;OAGG;IACI,yBAAS,GAAhB,UAAiB,MAAuB;QACtC,IAAM,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,CAAC;QAC3C,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;IACxC,CAAC;IACD;;;OAGG;IACI,0BAAU,GAAjB,UAAkB,OAA0B;;QAC1C,CAAA,KAAA,IAAI,CAAC,OAAO,CAAA,CAAC,IAAI,4BAAI,OAAO,GAAE;IAChC,CAAC;IAEM,qBAAK,GAAZ;QACE,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,UAAC,EAAE,EAAE,EAAE,IAAK,OAAA,EAAE,CAAC,KAAK,GAAG,EAAE,CAAC,KAAK,EAAnB,CAAmB,CAAC,CAAC;QACnD,IAAI,CAAC,UAAU,GAAG,CAAC,CAAC;QACpB,IAAI,aAAa,GAAG,WAAW,CAAC,GAAG,EAAE,CAAC;QAChC,IAAA,SAA0B,EAAxB,oBAAO,EAAE,kBAAe,CAAC;QACjC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,SAAS,KAAK,CAAC,IAAY;YACzB,IAAI,CAAC,UAAU,IAAI,CAAC,IAAI,GAAG,aAAa,CAAC,GAAG,MAAM,CAAC,KAAK,CAAC;YACzD,aAAa,GAAG,IAAI,CAAC;YACrB,OAAO,OAAO,CAAC,MAAM,EAAE;gBACrB,IAAM,MAAM,GAAG,OAAO,CAAC,CAAC,CAAC,CAAC;gBAC1B,IAAI,IAAI,CAAC,UAAU,IAAI,MAAM,CAAC,KAAK,EAAE;oBACnC,OAAO,CAAC,KAAK,EAAE,CAAC;oBAChB,MAAM,CAAC,QAAQ,EAAE,CAAC;iBACnB;qBAAM;oBACL,MAAM;iBACP;aACF;YACD,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,QAAQ,EAAE;gBAC9C,IAAI,CAAC,GAAG,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;aACzC;QACH,CAAC;QACD,IAAI,CAAC,GAAG,GAAG,qBAAqB,CAAC,KAAK,CAAC,CAAC;IAC1C,CAAC;IAEM,qBAAK,GAAZ;QACE,IAAI,IAAI,CAAC,GAAG,EAAE;YACZ,oBAAoB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;SAChC;QACD,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;IAC1B,CAAC;IAEO,+BAAe,GAAvB,UAAwB,MAAuB;QAC7C,IAAI,KAAK,GAAG,CAAC,CAAC;QACd,IAAI,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC;QAClC,OAAO,KAAK,IAAI,GAAG,EAAE;YACnB,IAAI,GAAG,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,KAAK,GAAG,GAAG,CAAC,GAAG,CAAC,CAAC,CAAC;YACxC,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE;gBAC1C,KAAK,GAAG,GAAG,GAAG,CAAC,CAAC;aACjB;iBAAM,IAAI,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,EAAE;gBACjD,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;aACf;iBAAM;gBACL,OAAO,GAAG,CAAC;aACZ;SACF;QACD,OAAO,KAAK,CAAC;IACf,CAAC;IACH,YAAC;AAAD,CAAC,AA1ED,IA0EC","sourcesContent":["import { playerConfig, actionWithDelay } from '../types';\n\nexport default class Timer {\n  public timeOffset: number = 0;\n\n  private actions: actionWithDelay[];\n  private config: playerConfig;\n  private raf: number;\n\n  constructor(config: playerConfig, actions: actionWithDelay[] = []) {\n    this.actions = actions;\n    this.config = config;\n  }\n  /**\n   * Add an action after the timer starts.\n   * @param action\n   */\n  public addAction(action: actionWithDelay) {\n    const index = this.findActionIndex(action);\n    this.actions.splice(index, 0, action);\n  }\n  /**\n   * Add all actions before the timer starts\n   * @param actions\n   */\n  public addActions(actions: actionWithDelay[]) {\n    this.actions.push(...actions);\n  }\n\n  public start() {\n    this.actions.sort((a1, a2) => a1.delay - a2.delay);\n    this.timeOffset = 0;\n    let lastTimestamp = performance.now();\n    const { actions, config } = this;\n    const self = this;\n    function check(time: number) {\n      self.timeOffset += (time - lastTimestamp) * config.speed;\n      lastTimestamp = time;\n      while (actions.length) {\n        const action = actions[0];\n        if (self.timeOffset >= action.delay) {\n          actions.shift();\n          action.doAction();\n        } else {\n          break;\n        }\n      }\n      if (actions.length > 0 || self.config.liveMode) {\n        self.raf = requestAnimationFrame(check);\n      }\n    }\n    this.raf = requestAnimationFrame(check);\n  }\n\n  public clear() {\n    if (this.raf) {\n      cancelAnimationFrame(this.raf);\n    }\n    this.actions.length = 0;\n  }\n\n  private findActionIndex(action: actionWithDelay): number {\n    let start = 0;\n    let end = this.actions.length - 1;\n    while (start <= end) {\n      let mid = Math.floor((start + end) / 2);\n      if (this.actions[mid].delay < action.delay) {\n        start = mid + 1;\n      } else if (this.actions[mid].delay > action.delay) {\n        end = mid - 1;\n      } else {\n        return mid;\n      }\n    }\n    return start;\n  }\n}\n"]}