{"version":3,"file":"snapshot.js","sourceRoot":"","sources":["../src/snapshot.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  serializedNode,\n  serializedNodeWithId,\n  NodeType,\n  attributes,\n  INode,\n  idNodeMap,\n} from './types';\n\nlet _id = 1;\n\nfunction genId(): number {\n  return _id++;\n}\n\nfunction getCssRulesString(s: CSSStyleSheet): string | null {\n  try {\n    const rules = s.rules || s.cssRules;\n    return rules\n      ? Array.from(rules).reduce(\n          (prev, cur) => prev + getCssRuleString(cur),\n          '',\n        )\n      : null;\n  } catch (error) {\n    return null;\n  }\n}\n\nfunction getCssRuleString(rule: CSSRule): string {\n  return isCSSImportRule(rule)\n    ? getCssRulesString(rule.styleSheet) || ''\n    : rule.cssText;\n}\n\nfunction isCSSImportRule(rule: CSSRule): rule is CSSImportRule {\n  return 'styleSheet' in rule;\n}\n\nfunction extractOrigin(url: string): string {\n  let origin;\n  if (url.indexOf('//') > -1) {\n    origin = url\n      .split('/')\n      .slice(0, 3)\n      .join('/');\n  } else {\n    origin = url.split('/')[0];\n  }\n  origin = origin.split('?')[0];\n  return origin;\n}\n\nconst URL_IN_CSS_REF = /url\\((?:'([^']*)'|\"([^\"]*)\"|([^)]*))\\)/gm;\nconst RELATIVE_PATH = /^(?!www\\.|(?:http|ftp)s?:\\/\\/|[A-Za-z]:\\\\|\\/\\/).*/;\nconst DATA_URI = /^(data:)([\\w\\/\\+]+);(charset=[\\w-]+|base64).*,(.*)/gi;\nexport function absoluteToStylesheet(cssText: string, href: string): string {\n  return cssText.replace(URL_IN_CSS_REF, (origin, path1, path2, path3) => {\n    const filePath = path1 || path2 || path3;\n    if (!filePath) {\n      return origin;\n    }\n    if (!RELATIVE_PATH.test(filePath)) {\n      return `url('${filePath}')`;\n    }\n    if (DATA_URI.test(filePath)) {\n      return `url(${filePath})`;\n    }\n    if (filePath[0] === '/') {\n      return `url('${extractOrigin(href) + filePath}')`;\n    }\n    const stack = href.split('/');\n    const parts = filePath.split('/');\n    stack.pop();\n    for (const part of parts) {\n      if (part === '.') {\n        continue;\n      } else if (part === '..') {\n        stack.pop();\n      } else {\n        stack.push(part);\n      }\n    }\n    return `url('${stack.join('/')}')`;\n  });\n}\n\nfunction absoluteToDoc(doc: Document, attributeValue: string): string {\n  const a: HTMLAnchorElement = doc.createElement('a');\n  a.href = attributeValue;\n  return a.href;\n}\n\nfunction isSVGElement(el: Element): boolean {\n  return el.tagName === 'svg' || el instanceof SVGElement;\n}\n\nfunction serializeNode(\n  n: Node,\n  doc: Document,\n  blockClass: string | RegExp,\n  inlineStylesheet: boolean,\n): serializedNode | false {\n  switch (n.nodeType) {\n    case n.DOCUMENT_NODE:\n      return {\n        type: NodeType.Document,\n        childNodes: [],\n      };\n    case n.DOCUMENT_TYPE_NODE:\n      return {\n        type: NodeType.DocumentType,\n        name: (n as DocumentType).name,\n        publicId: (n as DocumentType).publicId,\n        systemId: (n as DocumentType).systemId,\n      };\n    case n.ELEMENT_NODE:\n      let needBlock = false;\n      if (typeof blockClass === 'string') {\n        needBlock = (n as HTMLElement).classList.contains(blockClass);\n      } else {\n        (n as HTMLElement).classList.forEach(className => {\n          if (blockClass.test(className)) {\n            needBlock = true;\n          }\n        });\n      }\n      const tagName = (n as HTMLElement).tagName.toLowerCase();\n      let attributes: attributes = {};\n      for (const { name, value } of Array.from((n as HTMLElement).attributes)) {\n        // relative path in attribute\n        if (name === 'src' || name === 'href') {\n          attributes[name] = absoluteToDoc(doc, value);\n        } else if (name === 'style') {\n          attributes[name] = absoluteToStylesheet(value, location.href);\n        } else {\n          attributes[name] = value;\n        }\n      }\n      // remote css\n      if (tagName === 'link' && inlineStylesheet) {\n        const stylesheet = Array.from(doc.styleSheets).find(s => {\n          return s.href === (n as HTMLLinkElement).href;\n        });\n        const cssText = getCssRulesString(stylesheet as CSSStyleSheet);\n        if (cssText) {\n          delete attributes.rel;\n          delete attributes.href;\n          attributes._cssText = absoluteToStylesheet(\n            cssText,\n            stylesheet!.href!,\n          );\n        }\n      }\n      // dynamic stylesheet\n      if (\n        tagName === 'style' &&\n        (n as HTMLStyleElement).sheet &&\n        // TODO: Currently we only try to get dynamic stylesheet when it is an empty style element\n        !(n as HTMLElement).innerText.trim().length\n      ) {\n        const cssText = getCssRulesString((n as HTMLStyleElement)\n          .sheet as CSSStyleSheet);\n        if (cssText) {\n          attributes._cssText = absoluteToStylesheet(cssText, location.href);\n        }\n      }\n      // form fields\n      if (\n        tagName === 'input' ||\n        tagName === 'textarea' ||\n        tagName === 'select'\n      ) {\n        const value = (n as HTMLInputElement | HTMLTextAreaElement).value;\n        if (\n          attributes.type !== 'radio' &&\n          attributes.type !== 'checkbox' &&\n          value\n        ) {\n          attributes.value = value;\n        } else if ((n as HTMLInputElement).checked) {\n          attributes.checked = (n as HTMLInputElement).checked;\n        }\n      }\n      if (tagName === 'option') {\n        const selectValue = (n as HTMLOptionElement).parentElement;\n        if (attributes.value === (selectValue as HTMLSelectElement).value) {\n          attributes.selected = (n as HTMLOptionElement).selected;\n        }\n      }\n      if (needBlock) {\n        const { width, height } = (n as HTMLElement).getBoundingClientRect();\n        attributes.rr_width = `${width}px`;\n        attributes.rr_height = `${height}px`;\n      }\n      return {\n        type: NodeType.Element,\n        tagName,\n        attributes,\n        childNodes: [],\n        isSVG: isSVGElement(n as Element) || undefined,\n        needBlock,\n      };\n    case n.TEXT_NODE:\n      // The parent node may not be a html element which has a tagName attribute.\n      // So just let it be undefined which is ok in this use case.\n      const parentTagName =\n        n.parentNode && (n.parentNode as HTMLElement).tagName;\n      let textContent = (n as Text).textContent;\n      const isStyle = parentTagName === 'STYLE' ? true : undefined;\n      if (isStyle && textContent) {\n        textContent = absoluteToStylesheet(textContent, location.href);\n      }\n      if (parentTagName === 'SCRIPT') {\n        textContent = 'SCRIPT_PLACEHOLDER';\n      }\n      return {\n        type: NodeType.Text,\n        textContent: textContent || '',\n        isStyle,\n      };\n    case n.CDATA_SECTION_NODE:\n      return {\n        type: NodeType.CDATA,\n        textContent: '',\n      };\n    case n.COMMENT_NODE:\n      return {\n        type: NodeType.Comment,\n        textContent: (n as Comment).textContent || '',\n      };\n    default:\n      return false;\n  }\n}\n\n/**\n * 序列化节点并带有唯一Id\n * @param n \n * @param doc \n * @param map  \n * @param blockClass \n * @param skipChild 是否跳过子元素 \n * @param inlineStylesheet 是否内联样式\n */\nexport function serializeNodeWithId(\n  n: Node | INode,\n  doc: Document,\n  map: idNodeMap,\n  blockClass: string | RegExp,\n  skipChild = false,\n  inlineStylesheet = true,\n): serializedNodeWithId | null {\n  // serialize node.\n  const _serializedNode = serializeNode(n, doc, blockClass, inlineStylesheet);\n  if (!_serializedNode) {\n    // TODO: dev only\n    console.warn(n, 'not serialized');\n    return null;\n  }\n  let id;\n  // Try to reuse the previous id\n  if ('__sn' in n) {\n    id = n.__sn.id;\n  } else {\n    id = genId();\n  }\n  const serializedNode = Object.assign(_serializedNode, { id });\n  (n as INode).__sn = serializedNode;\n  map[id] = n as INode;\n  // recordChild 是否需要record 子元素\n  let recordChild = !skipChild;\n  if (serializedNode.type === NodeType.Element) {\n    recordChild = recordChild && !serializedNode.needBlock;\n    // this property was not needed in replay side\n    delete serializedNode.needBlock;\n  }\n  if (\n    (serializedNode.type === NodeType.Document ||\n      serializedNode.type === NodeType.Element) &&\n    recordChild\n  ) {\n    for (const childN of Array.from(n.childNodes)) {\n      const serializedChildNode = serializeNodeWithId(\n        childN,\n        doc,\n        map,\n        blockClass,\n        skipChild,\n        inlineStylesheet,\n      );\n      if (serializedChildNode) {\n        serializedNode.childNodes.push(serializedChildNode);\n      }\n    }\n  }\n  return serializedNode;\n}\n\nfunction snapshot(\n  n: Document,\n  blockClass: string | RegExp = 'rr-block',\n  inlineStylesheet = true,\n): [serializedNodeWithId | null, idNodeMap] {\n  const idNodeMap: idNodeMap = {};\n  return [\n    serializeNodeWithId(n, n, idNodeMap, blockClass, false, inlineStylesheet),\n    idNodeMap,\n  ];\n}\n\nexport default snapshot;\n"]}