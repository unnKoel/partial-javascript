{"version":3,"file":"rebuild.js","sourceRoot":"","sources":["../src/rebuild.ts"],"names":[],"mappings":"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","sourcesContent":["import {\n  serializedNodeWithId,\n  NodeType,\n  tagMap,\n  elementNode,\n  idNodeMap,\n  INode,\n} from './types';\n\nconst tagMap: tagMap = {\n  script: 'noscript',\n  // camel case svg element tag names\n  altglyph: 'altGlyph',\n  altglyphdef: 'altGlyphDef',\n  altglyphitem: 'altGlyphItem',\n  animatecolor: 'animateColor',\n  animatemotion: 'animateMotion',\n  animatetransform: 'animateTransform',\n  clippath: 'clipPath',\n  feblend: 'feBlend',\n  fecolormatrix: 'feColorMatrix',\n  fecomponenttransfer: 'feComponentTransfer',\n  fecomposite: 'feComposite',\n  feconvolvematrix: 'feConvolveMatrix',\n  fediffuselighting: 'feDiffuseLighting',\n  fedisplacementmap: 'feDisplacementMap',\n  fedistantlight: 'feDistantLight',\n  fedropshadow: 'feDropShadow',\n  feflood: 'feFlood',\n  fefunca: 'feFuncA',\n  fefuncb: 'feFuncB',\n  fefuncg: 'feFuncG',\n  fefuncr: 'feFuncR',\n  fegaussianblur: 'feGaussianBlur',\n  feimage: 'feImage',\n  femerge: 'feMerge',\n  femergenode: 'feMergeNode',\n  femorphology: 'feMorphology',\n  feoffset: 'feOffset',\n  fepointlight: 'fePointLight',\n  fespecularlighting: 'feSpecularLighting',\n  fespotlight: 'feSpotLight',\n  fetile: 'feTile',\n  feturbulence: 'feTurbulence',\n  foreignobject: 'foreignObject',\n  glyphref: 'glyphRef',\n  lineargradient: 'linearGradient',\n  radialgradient: 'radialGradient',\n};\nfunction getTagName(n: elementNode): string {\n  let tagName = tagMap[n.tagName] ? tagMap[n.tagName] : n.tagName;\n  if (tagName === 'link' && n.attributes._cssText) {\n    tagName = 'style';\n  }\n  return tagName;\n}\n\nconst CSS_SELECTOR = /([^\\r\\n,{}]+)(,(?=[^}]*{)|\\s*{)/g;\nconst HOVER_SELECTOR = /([^\\\\]):hover/g;\nexport function addHoverClass(cssText: string): string {\n  return cssText.replace(CSS_SELECTOR, (match, p1: string, p2: string) => {\n    if (HOVER_SELECTOR.test(p1)) {\n      const newSelector = p1.replace(HOVER_SELECTOR, '$1.\\\\:hover');\n      return `${p1.replace(/\\s*$/, '')}, ${newSelector.replace(\n        /^\\s*/,\n        '',\n      )}${p2}`;\n    } else {\n      return match;\n    }\n  });\n}\n\nfunction buildNode(n: serializedNodeWithId, doc: Document): Node | null {\n  switch (n.type) {\n    case NodeType.Document:\n      return doc.implementation.createDocument(null, '', null);\n    case NodeType.DocumentType:\n      return doc.implementation.createDocumentType(\n        n.name,\n        n.publicId,\n        n.systemId,\n      );\n    case NodeType.Element:\n      const tagName = getTagName(n);\n      let node: Element;\n      if (n.isSVG) {\n        node = doc.createElementNS('http://www.w3.org/2000/svg', tagName);\n      } else {\n        node = doc.createElement(tagName);\n      }\n      for (const name in n.attributes) {\n        // attribute names start with rr_ are internal attributes added by rrweb\n        if (n.attributes.hasOwnProperty(name) && !name.startsWith('rr_')) {\n          let value = n.attributes[name];\n          value = typeof value === 'boolean' ? '' : value;\n          const isTextarea = tagName === 'textarea' && name === 'value';\n          const isRemoteOrDynamicCss =\n            tagName === 'style' && name === '_cssText';\n          if (isRemoteOrDynamicCss) {\n            value = addHoverClass(value);\n          }\n          if (isTextarea || isRemoteOrDynamicCss) {\n            const child = doc.createTextNode(value);\n            node.appendChild(child);\n            continue;\n          }\n          if (tagName === 'iframe' && name === 'src') {\n            continue;\n          }\n          try {\n            if (n.isSVG && name === 'xlink:href') {\n              node.setAttributeNS('http://www.w3.org/1999/xlink', name, value);\n            } else {\n              node.setAttribute(name, value);\n            }\n          } catch (error) {\n            // skip invalid attribute\n          }\n        } else {\n          // handle internal attributes\n          if (n.attributes.rr_width) {\n            (node as HTMLElement).style.width = n.attributes.rr_width as string;\n          }\n          if (n.attributes.rr_height) {\n            (node as HTMLElement).style.height = n.attributes\n              .rr_height as string;\n          }\n        }\n      }\n      return node;\n    case NodeType.Text:\n      return doc.createTextNode(\n        n.isStyle ? addHoverClass(n.textContent) : n.textContent,\n      );\n    case NodeType.CDATA:\n      return doc.createCDATASection(n.textContent);\n    case NodeType.Comment:\n      return doc.createComment(n.textContent);\n    default:\n      return null;\n  }\n}\n\nexport function buildNodeWithSN(\n  n: serializedNodeWithId,\n  doc: Document,\n  map: idNodeMap,\n  skipChild = false,\n): INode | null {\n  let node = buildNode(n, doc);\n  if (!node) {\n    return null;\n  }\n  // use target document as root document\n  if (n.type === NodeType.Document) {\n    // close before open to make sure document was closed\n    doc.close();\n    doc.open();\n    node = doc;\n  }\n\n  (node as INode).__sn = n;\n  map[n.id] = node as INode;\n  if (\n    (n.type === NodeType.Document || n.type === NodeType.Element) &&\n    !skipChild\n  ) {\n    for (const childN of n.childNodes) {\n      const childNode = buildNodeWithSN(childN, doc, map);\n      if (!childNode) {\n        console.warn('Failed to rebuild', childN);\n      } else {\n        node.appendChild(childNode);\n      }\n    }\n  }\n  return node as INode;\n}\n\nfunction rebuild(\n  n: serializedNodeWithId,\n  doc: Document,\n): [Node | null, idNodeMap] {\n  const idNodeMap: idNodeMap = {};\n  return [buildNodeWithSN(n, doc, idNodeMap), idNodeMap];\n}\n\nexport default rebuild;\n"]}